<launch>
    <arg name="sim" default="False"/>
    <include file ="$(find suturo_julius)/launch/julius_qa_system.launch"/>
    
    <node pkg="suturo_textparser" name="textparser" type="textparser.py" respawn="true" output="screen">
	    <remap from="input" to="suturo_speech_recognition/voice/text"/>
    	<remap from="hard_commands" to="hard_commands"/>
	    <remap from="to_slingparser" to="to_slingparser"/>			
    </node>	
    
	<node pkg="suturo_textparser" name="slingparserRosInterface" type="slingparserRosInterface.py" respawn="true" output="screen">
		<remap from="sp_input" to="to_slingparser"/>
		<remap from="sp_output" to="to_knowledge_interface"/>		
	</node>
	<node pkg="suturo_nlg" name="knowledgeInterface" type="knowledge_interface.py" respawn="true" output="screen">
		<remap from="kinterface_in" to="to_knowledge_interface"/>
		<remap from="kinterface_out" to="nlg_requests"/>
	</node>
	<node pkg="suturo_nlg" name="demo_answers_ros" type="demo_answers_ros.py" respawn="true" output="screen">
        <param name="use_action" value="False"/>
		<remap from="nlg_requests" to="nlg_requests"/>
	</node>	
	
	<group if="$(arg sim)">
	    <arg name="map_file" default="$(find maps)/corona_sim/sim_v1.yaml"/>
        <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />
	    <node pkg="rviz" type="rviz" name="nlg_rviz"/>
        <node pkg="tf" type="static_transform_publisher" name="robot_footprint_broadcaster" args="0 0 0 0 0 0 /map /base_footprint 25"></node>
        <include file="$(find knowledge)/launch/knowledge.launch" />
        <!-- <node pkg="suturo_nlg" name="demo_object_data_adder" type="qa_demo_data_adder.py" respawn="false" output="screen">
    	</node>	-->
    </group>	

    
</launch>
